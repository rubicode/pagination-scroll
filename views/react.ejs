<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scroll Pagination using React</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>
    <div id="root"></div>


    <script type="text/babel">

        function NameItem({ item }) {
            return (
                <div className="card border-success mt-3">
                    <div className="card-header text-center">
                        <h1>{item._id}</h1>
                    </div>
                    <div className="card-body text-center">
                        <h2>{item.nama}</h2>
                    </div>
                </div>
            )
        }

        class NameList extends React.Component {
            constructor() {
                super()
                this.state = {
                    data: [],
                    page: 1,
                    query: ''
                }
            }

            componentDidMount() {
                this.readData()
                window.addEventListener('scroll', () => {
                    const {
                        scrollTop,
                        scrollHeight,
                        clientHeight
                    } = document.documentElement;
                    if (scrollTop + clientHeight >= scrollHeight - 1) {
                        this.setState(prevState => ({
                            page: prevState.page + 1
                        }), () => {
                            this.readData()
                        })

                    }
                }, {
                    passive: true
                });
            }

            readData = async () => {
                try {
                    const response = await fetch(`/?page=${this.state.page}&query=${this.state.query}`)
                    const { data, pages } = await response.json()
                    console.log(data)
                    this.setState(prevState => ({
                        data: [...prevState.data, ...data]
                    }))
                } catch (e) {
                    console.log(e)
                }
            }

            filterData = async () => {
                try {
                    const response = await fetch(`/?page=1&query=${this.state.query}`)
                    const { data, pages } = await response.json()
                    console.log(data)
                    this.setState({
                        data: [...data]
                    })
                } catch (e) {
                    console.log(e)
                }
            }

            onSubmit = (e) => {
                e.preventDefault()
                this.filterData()
            }

            onKeyup = (e) => {
                this.setState({ query: e.target.value }, () => {
                    this.filterData()
                })
            }

            render() {
                return (
                    <div>
                        <form className="row" onSubmit={this.onSubmit}>
                            <input type="text" className="form-control" defaultValue={this.state.query} onKeyUp={this.onKeyup} />
                            <button type="submit" className="btn btn-primary">search</button>
                        </form>
                        <div className="container">
                            {this.state.data.map(item => (<NameItem key={item._id} item={item} />))}
                        </div>
                    </div>
                );
            }
        }



        const container = document.getElementById('root');
        const root = ReactDOM.createRoot(container);
        root.render(<NameList />);

    </script>
</body>

</html>